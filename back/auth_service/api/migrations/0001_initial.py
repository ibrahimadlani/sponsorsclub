# Generated by Django 4.2.19 on 2025-02-21 01:30

import api.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('formatted_address', models.CharField(help_text='Full formatted address from Google API', max_length=255)),
                ('street_number', models.CharField(blank=True, help_text='Street number', max_length=20, null=True)),
                ('route', models.CharField(blank=True, help_text='Street name', max_length=255, null=True)),
                ('locality', models.CharField(blank=True, help_text='City / Locality', max_length=100, null=True)),
                ('administrative_area_level_1', models.CharField(blank=True, help_text='State / Region', max_length=100, null=True)),
                ('administrative_area_level_2', models.CharField(blank=True, help_text='County / District', max_length=100, null=True)),
                ('country', models.CharField(blank=True, help_text='Country name', max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='ZIP / Postal Code', max_length=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude from Google API', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude from Google API', max_digits=9, null=True)),
                ('place_id', models.CharField(blank=True, help_text='Google Maps Place ID', max_length=255, null=True, unique=True)),
                ('types', models.CharField(blank=True, help_text='Google Address Types (e.g., street_address, route)', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_country_code', models.CharField(default='+33', max_length=5)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('profile_picture_url', models.TextField(blank=True, null=True)),
                ('cover_photo_url', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non-binary', 'Non-Binary')], max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('subscription_plan', models.CharField(choices=[('free', 'Free'), ('premium', 'Premium'), ('pro', 'Pro')], default='free', max_length=50)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_banned', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('verification_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('reset_password_token', models.UUIDField(blank=True, editable=False, null=True)),
                ('token_expiry', models.DateTimeField(default=api.models.User.get_token_expiry)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
