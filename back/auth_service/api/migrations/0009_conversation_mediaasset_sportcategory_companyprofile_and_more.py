# Generated by Django 4.2.19 on 2025-09-15 19:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0008_remove_athlete_subscribers_vb_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("topic", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MediaAsset",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("url", models.CharField(max_length=512)),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SportCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=120, unique=True)),
                ("slug", models.SlugField(max_length=140, unique=True)),
                ("emoji", models.CharField(blank=True, max_length=8, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CompanyProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=160)),
                ("slug", models.SlugField(max_length=180, unique=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("verified", models.BooleanField(default=False)),
                ("logo_url", models.CharField(blank=True, max_length=512, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SocialStat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("instagram", "Instagram"),
                            ("facebook", "Facebook"),
                            ("youtube", "YouTube"),
                            ("tiktok", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                ("followers", models.PositiveIntegerField(default=0)),
                ("username", models.CharField(blank=True, max_length=120, null=True)),
                (
                    "profile_url",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_stats",
                        to="api.athlete",
                    ),
                ),
            ],
            options={
                "unique_together": {("athlete", "platform")},
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "attachments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="message_attachments",
                        to="api.mediaasset",
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="api.conversation",
                    ),
                ),
                (
                    "read_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="read_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["conversation", "created_at"],
                        name="api_message_convers_ece45b_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ConversationParticipant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("unread_count", models.PositiveIntegerField(default=0)),
                ("is_muted", models.BooleanField(default=False)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="api.conversation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("conversation", "user")},
            },
        ),
        migrations.CreateModel(
            name="AthleteImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="api.athlete",
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="api.mediaasset",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("athlete", "media")},
            },
        ),
        migrations.CreateModel(
            name="AthleteFollow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="api.athlete",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user"], name="api_athlete_user_id_772c47_idx"
                    ),
                    models.Index(
                        fields=["athlete"], name="api_athlete_athlete_90f746_idx"
                    ),
                ],
                "unique_together": {("user", "athlete")},
            },
        ),
        migrations.CreateModel(
            name="ActivityEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("post", "Post"),
                            ("competition", "Competition"),
                            ("followers", "Followers Growth"),
                            ("trophy", "Trophy"),
                            ("photo", "Photo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("text", models.TextField(blank=True, null=True)),
                (
                    "platform",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("instagram", "Instagram"),
                            ("facebook", "Facebook"),
                            ("youtube", "YouTube"),
                            ("tiktok", "TikTok"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("happened_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "competition_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "competition_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("competition_date", models.DateField(blank=True, null=True)),
                (
                    "competition_result",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("followers_delta", models.IntegerField(blank=True, null=True)),
                (
                    "followers_note",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "trophy_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "trophy_award",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="api.athlete",
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True, related_name="activity_events", to="api.mediaasset"
                    ),
                ),
            ],
            options={
                "ordering": ["-happened_at"],
                "indexes": [
                    models.Index(
                        fields=["athlete", "happened_at"],
                        name="api_activit_athlete_20f4db_idx",
                    ),
                    models.Index(
                        fields=["type", "happened_at"],
                        name="api_activit_type_7f3b30_idx",
                    ),
                ],
            },
        ),
    ]
